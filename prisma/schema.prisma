// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Evaluation {
  id                Int                 @id @default(autoincrement())
  title             String
  metadata          Json?
  genModel          String?
  courseId          Int
  course            Course              @relation(fields: [courseId], references: [id])
  currentVersionId  Int?                @unique
  currentVersion    EvaluationVersion?  @relation("CurrentVersion", fields: [currentVersionId], references: [id])
  versions          EvaluationVersion[] @relation("EvaluationVersions")
}

model EvaluationVersion {
  id            Int         @id @default(autoincrement())
  content       Json?
  versionInfo   Json?
  createdAt     DateTime    @default(now())
  evaluationId  Int
  evaluation    Evaluation  @relation("EvaluationVersions", fields: [evaluationId], references: [id], onDelete: Cascade)
  currentFor    Evaluation? @relation("CurrentVersion")
}

model Course {
  id          Int     @id @default(autoincrement())
  courseName  String
  files       File[]
  evaluations Evaluation[]
}

model File {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  fileName    String
  mimeType    String
  fileSize    Float
  filePath    String
  textContent String
  courseId    Int
  course      Course    @relation(fields: [courseId], references: [id])
}